@tailwind base;
@tailwind components;
@tailwind utilities;

body {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: 'Montserrat', sans-serif;
}

html {
	scroll-behavior: smooth;
}

button.contact-me {
	padding: 10px;
	font-size: 15px;
	outline: none;
	border: 2px solid black;
	background-color: white;
	color: white;
	position: relative;
	letter-spacing: 1px;
}

button.contact-me::before {
	content: 'Contact Me';
	/*Button's value/text-content */
	position: absolute;
	top: -14%;
	left: 7%;
	background-color: black;
	width: 100%;
	height: 100%;
	color: white;
	display: flex;
	align-items: center;
	justify-content: center;
	transition: 0.15s ease-in-out;
	font-weight: bold;
}

button.contact-me:hover::before {
	top: 0;
	left: 0;
}

.menuButton {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	gap: 13%;
	color: #090909;
	width: 2.5em;
	height: 2.5em;
	border-radius: 0.5em;
	background: #e8e8e8;
	border: 1px solid #e8e8e8;
	transition: all 0.3s;
	box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
}

.menuButton:hover {
	border: 1px solid white;
}

.menuButton:active {
	color: #666;
	box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;
}

input[type='checkbox'] {
	-webkit-appearance: none;
	display: none;
	visibility: hidden;
}

.menuButton span {
	width: 25px;
	height: 4px;
	background: #131313;
	border-radius: 100px;
	transition: 0.3s ease;
}

input[type]:checked ~ span.top {
	transform: translateY(290%) rotate(45deg);
	width: 40px;
}

input[type]:checked ~ span.bot {
	transform: translateY(-270%) rotate(-45deg);
	width: 40px;
	box-shadow: 0 0 10px #495057;
}

input[type]:checked ~ span.mid {
	transform: translateX(-20px);
	opacity: 0;
}

.loader {
	--path: #2f3545;
	--dot: #5628ee;
	--duration: 3s;
	width: 44px;
	height: 44px;
	position: relative;
}

.loader:before {
	content: '';
	width: 6px;
	height: 6px;
	border-radius: 50%;
	position: absolute;
	display: block;
	background: var(--dot);
	top: 37px;
	left: 19px;
	transform: translate(-18px, -18px);
	animation: dotRect var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
		infinite;
}

.loader svg {
	display: block;
	width: 100%;
	height: 100%;
}

.loader svg rect,
.loader svg polygon,
.loader svg circle {
	fill: none;
	stroke: var(--path);
	stroke-width: 10px;
	stroke-linejoin: round;
	stroke-linecap: round;
}

.loader svg polygon {
	stroke-dasharray: 145 76 145 76;
	stroke-dashoffset: 0;
	animation: pathTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
		infinite;
}

.loader svg rect {
	stroke-dasharray: 192 64 192 64;
	stroke-dashoffset: 0;
	animation: pathRect 3s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

.loader svg circle {
	stroke-dasharray: 150 50 150 50;
	stroke-dashoffset: 75;
	animation: pathCircle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
		infinite;
}

.loader.triangle {
	width: 48px;
}

.loader.triangle:before {
	left: 21px;
	transform: translate(-10px, -18px);
	animation: dotTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
		infinite;
}

@keyframes pathTriangle {
	33% {
		stroke-dashoffset: 74;
	}

	66% {
		stroke-dashoffset: 147;
	}

	100% {
		stroke-dashoffset: 221;
	}
}

@keyframes dotTriangle {
	33% {
		transform: translate(0, 0);
	}

	66% {
		transform: translate(10px, -18px);
	}

	100% {
		transform: translate(-10px, -18px);
	}
}

@keyframes pathRect {
	25% {
		stroke-dashoffset: 64;
	}

	50% {
		stroke-dashoffset: 128;
	}

	75% {
		stroke-dashoffset: 192;
	}

	100% {
		stroke-dashoffset: 256;
	}
}

@keyframes dotRect {
	25% {
		transform: translate(0, 0);
	}

	50% {
		transform: translate(18px, -18px);
	}

	75% {
		transform: translate(0, -36px);
	}

	100% {
		transform: translate(-18px, -18px);
	}
}

@keyframes pathCircle {
	25% {
		stroke-dashoffset: 125;
	}

	50% {
		stroke-dashoffset: 175;
	}

	75% {
		stroke-dashoffset: 225;
	}

	100% {
		stroke-dashoffset: 275;
	}
}

.loader {
	display: inline-block;
	margin: 0 16px;
}
